name: 'Ollama GitHub Code Reviewer'
description: 'Perform code review using Ollama API'
inputs:
  model:
    description: 'Ollama model to use for code review'
    required: true
    default: 'codellama'
runs:
  using: 'composite'
  steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v45

    - name: List all changed files
      shell: bash
      env:
        ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
      run: |
        for file in ${ALL_CHANGED_FILES}; do
          echo "$file was changed"
        done

    - name: Review code
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: |
        curl -fsSL https://ollama.com/install.sh | sh
        curl -sS https://webi.sh/gh | sh
        export PATH="$HOME/.local/bin:$PATH"

        export GITHUB_TOKEN=
        echo ${{ github.token }} | gh auth login --with-token
        
        function ollamaServe {
          echo "start ollama as serve mode begin"
          ollama serve
        }

        ollamaServe &
        sleep 3

        echo "start to pull model:llama3"
        ollama --version
        ollama pull llama3
        ollama list
        
        for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
          echo $file
          content=$(cat "$file")
          content=${content//\'/\'\'}
          content=$(echo "$content" | tr '\n' ' ')
          review=$(curl -s http://127.0.0.1:11434/api/generate -d '{"model": "llama3", "prompt": "As a software engineer, please review the following code:\n\n```\n'"${content}"'\n```", "stream": false}' | jq -r '.response')
          echo $review
          comment="Ollama Code Review for \`$file\`:\n\n$review"
          echo "$comment" >> ollama_review.txt
        done

        gh pr comment ${{ github.event.pull_request.number }} --body "$(cat ollama_review.txt)"
      shell: bash
